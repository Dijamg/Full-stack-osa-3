{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","Filter","_ref","value","onChange","react_default","a","createElement","Fragment","PersonForm","_ref2","onSubmit","newName","onNameChange","newNumber","onNumberChange","pattern","type","Person","_ref3","person","onClick","name","number","SuccessNotification","_ref4","message","isError","className","ErrorNotification","_ref5","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","successMessage","setSuccessMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","console","log","length","personsToBeShown","filter","toLowerCase","includes","App_SuccessNotification","App_ErrorNotification","App_Filter","event","target","App_PersonForm","preventDefault","personObject","map","window","confirm","personToBeChanged","find","changedPerson","objectSpread","returnedPerson","setTimeout","catch","error","statusText","changeNumber","responseData","App_Person","key","deletePerson","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.24ea0e6e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n      return response.data\r\n    })\r\n  }\r\n\r\nconst discard = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst add = (newObject) =>{\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll,add, discard, update }","import React, { useState, useEffect } from 'react'\r\nimport personsService from './services/persons'\r\n\r\nconst Filter = ({value, onChange})=>(\r\n    <>filter shown with: <input value={value} onChange={onChange}/></>\r\n)\r\n\r\nconst PersonForm = ({onSubmit, newName, onNameChange, newNumber, onNumberChange}) => (\r\n    <form onSubmit={onSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange ={onNameChange} /><br/>\r\n          number: <input pattern=\"^[\\d\\(\\)\\-+]+$\" value={newNumber} onChange ={onNumberChange} />\r\n        </div>  \r\n        <div>   \r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n\r\nconst Person =({person, onClick})=>(\r\n    <div>{person.name} {person.number}<button onClick={onClick}>delete</button><br/></div>\r\n)\r\n\r\nconst SuccessNotification = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorNotification = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ successMessage, setSuccessMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n  \r\n  const changeNumber = (id) =>{\r\n    const personToBeChanged = persons.find(person => person.id === id)\r\n    const changedPerson = {...personToBeChanged, number: newNumber}\r\n\r\n    personsService\r\n      .update(id, changedPerson)\r\n      .then(returnedPerson =>{\r\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n        setSuccessMessage(\r\n          `Changed number of ${personToBeChanged.name}`\r\n        )\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error =>{\r\n        if(error.response.statusText === \"Bad Request\"){\r\n          setErrorMessage(error.response.data.error)\r\n        }else{\r\n          setErrorMessage(\r\n            `Information of ${personToBeChanged.name} has already been removed from the server`\r\n          )\r\n        }\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n  \r\n  const deletePerson = (id) =>{\r\n    const name = persons.find(person => person.id === id).name\r\n    if(window.confirm(`Delete ${name}`)){\r\n        personsService.discard(id)\r\n        setPersons( persons.filter(person => person.id !== id))\r\n        setSuccessMessage(\r\n          `Deleted ${name}`\r\n        )\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n    }\r\n  }\r\n\r\n  console.log('render', persons.length, 'notes')\r\n\r\n  const personsToBeShown = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  const addPerson = (event) =>{\r\n      event.preventDefault()\r\n      const personObject ={\r\n          name: newName,\r\n          number: newNumber,\r\n      } \r\n      if(persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())){\r\n        if(window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)){\r\n          changeNumber((persons.find(person => person.name.toLowerCase() === newName.toLowerCase()).id))\r\n        }\r\n      }else{\r\n        personsService\r\n          .add(personObject)\r\n          .then(responseData => {\r\n              setPersons(persons.concat(responseData))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setSuccessMessage(\r\n                `Added ${personObject.name}`\r\n              )\r\n              setTimeout(() => {\r\n                setSuccessMessage(null)\r\n              }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(error.response.data.error)\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n            console.log(error.response.data)\r\n          })\r\n      }\r\n  }\r\n\r\n  const rows = () =>( \r\n    personsToBeShown.map(person => <Person person = {person} key ={person.id} onClick ={() => deletePerson(person.id)}/>)\r\n  )\r\n\r\n  const handleNameChange = (event) =>{\r\n      console.log(event.target.value)\r\n      setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) =>{\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n}\r\nconst handleFilterChange = (event) =>{\r\n    console.log(event.target.value)\r\n    setNewFilter(event.target.value)\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <SuccessNotification message={successMessage}/>\r\n      <ErrorNotification message={errorMessage}/>\r\n\r\n      <Filter value = {newFilter} onChange = {handleFilterChange}/>\r\n\r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm onSubmit = {addPerson} newName ={newName} onNameChange={handleNameChange} newNumber={newNumber} onNumberChange={handleNumberChange}/>\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      {rows()}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}